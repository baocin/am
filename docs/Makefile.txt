K3S_VERSION = v1.28.3+k3s1
HELM_VERSION = v3.12.0

.PHONY: setup dev-up dev-down build test status test-cpu test-gpu

setup:
	./check_gpu.sh && export GPU_ENABLED=true || export GPU_ENABLED=false
	curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644
	curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
	chmod 700 get_helm.sh
	./get_helm.sh --version $(HELM_VERSION)
	docker build -t loom/ingestion:latest -f docker/ingestion/Dockerfile .
	docker build -t loom/storage:latest -f docker/storage/Dockerfile .
	docker build -t loom/stt-processor:latest -f docker/stt-processor/Dockerfile .
	docker build -t loom/dspy:latest -f docker/dspy/Dockerfile .
	k3s ctr images import docker/ingestion.tar
	k3s ctr images import docker/storage.tar
	k3s ctr images import docker/stt-processor.tar
	k3s ctr images import docker/dspy.tar

dev-up:
	sudo systemctl start k3s
	helm upgrade --install loom ./helm/loom \
		--set nats.url=nats://nats:4222 \
		--set timescale.connection=postgres://loom:loom@timescale:5432/loom \
		--set gpu.enabled=$$GPU_ENABLED

dev-down:
	helm uninstall loom
	sudo systemctl stop k3s

build:
	go build -o bin/ingestion ./cmd/ingestion
	go build -o bin/storage ./cmd/storage
	go build -o bin/stt-processor ./cmd/stt-processor
	go build -o bin/dspy ./cmd/dspy

test:
	go test ./...
	kubectl apply -f tests/integration.yaml
	kubectl wait --for=condition=complete job/integration-tests

test-cpu:
	helm upgrade --install loom ./helm/loom \
		--set nats.url=nats://nats:4222 \
		--set timescale.connection=postgres://loom:loom@timescale:5432/loom \
		--set gpu.enabled=false

test-gpu:
	./check_gpu.sh && helm upgrade --install loom ./helm/loom \
		--set nats.url=nats://nats:4222 \
		--set timescale.connection=postgres://loom:loom@timescale:5432/loom \
		--set gpu.enabled=true || echo "GPU not available, skipping GPU test"

status:
	kubectl get pods
	kubectl get svc
	curl http://localhost:8000/healthz